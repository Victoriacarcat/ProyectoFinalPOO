/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;
import Proyecto_Restaurante.Conexion;
import java.sql.*;
import javax.swing.JOptionPane;
import Proyecto_Restaurante.*;
import java.util.ArrayList;
import java.util.List;
public class GestionVentas extends javax.swing.JFrame {

    private List<Detalle_venta> listaDetalleVenta = new ArrayList<>();//Para hacer el carrito
    private String idVentaActual=null;//Para mantener el mismo id de venta mientras se siguen agregando platillos al producto
    private List<Platillos> listaPlatillos = new ArrayList<>();//Lista para almacenar los platillos agregados a la venta actual, esto para los datos en la factura
    public GestionVentas() {
        
        initComponents();
        cargarPlatillosEnComboBox(); 
        cargarMesasEnComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(744, 642));
        setMinimumSize(new java.awt.Dimension(744, 642));
        setPreferredSize(new java.awt.Dimension(744, 642));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(167, 137, 118));
        jPanel1.setForeground(new java.awt.Color(167, 137, 118));
        jPanel1.setPreferredSize(new java.awt.Dimension(744, 642));

        jPanel2.setBackground(new java.awt.Color(139, 106, 87));

        jLabel2.setBackground(new java.awt.Color(56, 56, 72));
        jLabel2.setFont(new java.awt.Font("Rockwell", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Gesti√≥n de Ventas");

        jPanel6.setBackground(new java.awt.Color(68, 47, 20));
        jPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel6MouseClicked(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Agregar a la venta");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel5)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(167, 137, 118));
        jPanel3.setForeground(new java.awt.Color(167, 137, 118));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Seleccione el platillo de la venta:");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel3))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(167, 137, 118));
        jPanel4.setForeground(new java.awt.Color(167, 137, 118));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Digite la cantidad de unidades:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel4))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(68, 47, 20));
        jPanel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel7MouseClicked(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Finalizar venta");
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(25, 25, 25))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(167, 137, 118));
        jPanel5.setForeground(new java.awt.Color(167, 137, 118));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Rockwell", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Seleccione el n√∫mero de la mesa");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(61, 61, 61))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(113, 113, 113))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pexels-husna-simsek-1189396030-24838570 (2).jpg"))); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel7.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Volver");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        Gestion_persona gp=new Gestion_persona();
        gp.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jPanel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseClicked

    }//GEN-LAST:event_jPanel6MouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jPanel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseClicked

    }//GEN-LAST:event_jPanel7MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
         try {
            int cantidad = Integer.parseInt(jTextField1.getText());
            if (cantidad <= 0) {
                JOptionPane.showMessageDialog(this, "La cantidad debe ser mayor que cero.");
                return;
            }
            // Validar que idVentaActual est√© asignado 
            if (idVentaActual == null) {
                idVentaActual = generarNuevoIdVenta(); // m√©todo para generar nuevo ID de venta
            }
            String nombrePlatillo = jComboBox1.getSelectedItem().toString();
            // Obtener el idPlatillo usando un m√©todo que busque en BD o en lista
            String idPlatillo = obtenerIdPlatilloPorNombre(nombrePlatillo);
            // Generar un nuevo ID √∫nico para detalle_venta (puedes hacer un m√©todo parecido)
            String idDetalleVenta = generarNuevoIdDetalleVenta();
            // Crear el detalle con todos los IDs
            Detalle_venta detalle = new Detalle_venta(idDetalleVenta,cantidad, idPlatillo,idVentaActual);
            Platillos platilloSeleccionado = (Platillos) jComboBox1.getSelectedItem();
            listaPlatillos.add(platilloSeleccionado);

            // Agregar detalle a la lista 
            listaDetalleVenta.add(detalle);

            JOptionPane.showMessageDialog(this, "Platillo agregado al carrito.");
            jTextField1.setText("");

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor ingresa un n√∫mero v√°lido para la cantidad.");
        }
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        finalizarVenta();
    }//GEN-LAST:event_jLabel6MouseClicked

    
    //Generar los ids
   public String generarNuevoIdDetalleVenta() {
        String nuevoId = "0001";
        try (Connection conexion = Conexion.conectar();
             Statement st = conexion.createStatement();
             ResultSet rs = st.executeQuery("SELECT MAX(CAST(id_detalle AS UNSIGNED)) FROM detalle_venta")) {
            if (rs.next()) {
                String ultimoId = rs.getString(1);
                if (ultimoId != null && !ultimoId.trim().isEmpty()) {
                    ultimoId = ultimoId.replaceAll("[^0-9]", ""); // Limpiar caracteres no num√©ricos y remplazamos por vacio
                    try {
                        int idNum = Integer.parseInt(ultimoId);
                        nuevoId = String.format("%04d", idNum + 1);//Aumentar los ids y convertir a string
                    } catch (NumberFormatException ex) {
                        System.out.println("Error al convertir a n√∫mero: '" + ultimoId + "'");
                        ex.printStackTrace();
                    }
                }
            } else {
                System.out.println("ResultSet vac√≠o.");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al generar ID de detalle venta: " + e.getMessage());
            e.printStackTrace();
        }

        return nuevoId;
    }
    public String generarNuevoIdVenta() {
        String nuevoId = "0001";
        try (Connection conexion = Conexion.conectar();
             Statement st = conexion.createStatement();
             ResultSet rs = st.executeQuery("SELECT MAX(CAST(id_venta AS UNSIGNED)) FROM venta")) {//consulta
            if (rs.next()) {
                String ultimoId = rs.getString(1);
                if (ultimoId != null && !ultimoId.trim().isEmpty()) {
                    int idNum = Integer.parseInt(ultimoId.trim());
                    nuevoId = String.format("%04d", idNum + 1);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al generar ID de venta: " + e.getMessage());
        }
        return nuevoId;
    }

    public void cargarPlatillosEnComboBox() {
        Connection conexion = Conexion.conectar();
        if (conexion == null) {
            JOptionPane.showMessageDialog(this, "No se pudo conectar a la base de datos.");
            return;
        }else{
            System.out.println("Conexion exitosa");
        }
        try {
            String sql = "SELECT id_platillo, nombre, precio, id_categoria FROM platillos";
            PreparedStatement ps = conexion.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String idPlatillo = rs.getString("id_platillo");
                String nombre = rs.getString("nombre");
                Double precio = rs.getDouble("precio");
                String categoria = rs.getString("id_categoria");
                Platillos platillo = new Platillos(idPlatillo, nombre, precio,categoria);
                jComboBox1.addItem(platillo); 
            }
            rs.close();
            ps.close();
            conexion.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al cargar los platillos: " + e.getMessage());
        }
    }
    public void cargarMesasEnComboBox() {
        try (Connection conexion = Conexion.conectar();//Validamos conexi√≥n con la base
             Statement st = conexion.createStatement();
             ResultSet rs = st.executeQuery("SELECT id_mesa, capacidad, id_status FROM mesa")) {//consulta
            while (rs.next()) {//Se recorre los resultados de la consulta
                String id = rs.getString("id_mesa");
                int capacidad = rs.getInt("capacidad");
                String status = rs.getString("id_status");
                Mesa mesas = new Mesa(id, capacidad, status);//Se instancia la clase Mesa para agregar un objeto a la lista
                jComboBox2.addItem(mesas);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar mesas: " + e.getMessage());
        }
    }
    public String obtenerIdPlatilloPorNombre(String nombrePlatillo) {
        String idPlatillo = null;
        String sql = "SELECT id_platillo FROM platillos WHERE nombre = ?";
        try (Connection conexion = Conexion.conectar();
             PreparedStatement ps = conexion.prepareStatement(sql)) {
            ps.setString(1, nombrePlatillo);
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    idPlatillo = rs.getString("id_platillo");
                } else {
                    JOptionPane.showMessageDialog(null, "No se encontr√≥ el platillo: " + nombrePlatillo);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al obtener ID del platillo: " + e.getMessage());
        }
        return idPlatillo;
    }
    private void finalizarVenta() {
        if (listaDetalleVenta.isEmpty()) {//Validamos que haya al menos un plato dentro de la venta
            JOptionPane.showMessageDialog(this, "El carrito est√° vac√≠o. Agrega platillos antes de finalizar.");
            return;
        }
        if (idVentaActual == null || idVentaActual.trim().isEmpty()) {//Validamos que se inicie la venta con in id v√°lido
            JOptionPane.showMessageDialog(this, "No se ha iniciado la venta correctamente.");
            return;
        }
        Mesa mesaSeleccionada = (Mesa) jComboBox2.getSelectedItem();//capturamos la mesa seleccionada
        if (mesaSeleccionada == null) {//validamos que se haya seleccionado una mesa
            JOptionPane.showMessageDialog(this, "Debes seleccionar una mesa v√°lida.");
            return;
        }
        String idMesa = mesaSeleccionada.getId_mesa();//Se toma el id de la mesa seleccionada
        try (Connection conexion = Conexion.conectar()) {
            conexion.setAutoCommit(false); 
            // Aqui se Inserta en tabla venta
            String sqlVenta = "INSERT INTO venta (id_venta, id_mesa, fecha_hora) VALUES (?, ?, CURRENT_TIMESTAMP)";
            try (PreparedStatement psVenta = conexion.prepareStatement(sqlVenta)) {
                psVenta.setString(1, idVentaActual);
                psVenta.setString(2, idMesa);
                psVenta.executeUpdate();
            }
            // Obtenemos √∫ltimo id_detalle porque cada adici√≥n al carrito requiere de un nuevo id pero con el mismo id de venta 
            int ultimoIdDetalle = 0;//para lo anterior se utiliza un contador
            try (Statement st = conexion.createStatement();//Se intenta obtener el √∫ltimo numero de id de la tabla detalle_venta
                 ResultSet rs = st.executeQuery("SELECT MAX(CAST(id_detalle AS UNSIGNED)) FROM detalle_venta")) {
                if (rs.next()) {
                    String ultimo = rs.getString(1);
                    if (ultimo != null) {
                        ultimoIdDetalle = Integer.parseInt(ultimo);
                    }
                }
            }
            double totalDescuento = 0;
            // Insertar detalles venta en la tabla detalle_venta
            String sqlDetalle = "INSERT INTO detalle_venta (id_detalle, id_venta, id_platillo, cantidad) VALUES (?, ?, ?, ?)";
            try (PreparedStatement psDetalle = conexion.prepareStatement(sqlDetalle)) {
                for (Detalle_venta detalle : listaDetalleVenta) {// se utiliza un for each para recorrer los platillos en el carrito
                    ultimoIdDetalle++;//se aumenta el id de detalle venta
                    String nuevoIdDetalle = String.format("%04d", ultimoIdDetalle);
                    psDetalle.setString(1, nuevoIdDetalle);
                    psDetalle.setString(2, idVentaActual);
                    psDetalle.setString(3, detalle.getId_platillo());
                    psDetalle.setInt(4, detalle.getCantidad());
                    psDetalle.executeUpdate();
                    
                }
            }
            conexion.commit();
            JOptionPane.showMessageDialog(this, "Venta registrada correctamente.");
            Factura factura = new Factura(listaDetalleVenta, listaPlatillos); // Se le pasa a Factura ambas listas para obtener los datos necesarios
            VistaFactura vf = new VistaFactura(factura);
            vf.setVisible(true);//Para mostrar la factura
            // Limpiar lista y campos para pr√≥xima venta
            listaDetalleVenta.clear();
            jTextField1.setText("");
            jComboBox1.setSelectedIndex(0);
            idVentaActual = null;

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al registrar la venta: " + e.getMessage());
            e.printStackTrace();
        }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionVentas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Platillos> jComboBox1;
    private javax.swing.JComboBox<Mesa> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
